apply plugin: 'java'

dependencies {
    compile 'org.jruby:jruby-complete:1.6.7.2'
    compile 'org.rubygems:jruby-openssl:0.7.7'
    compile 'org.rubygems:haml:3.1.6'
    compile 'org.rubygems:sass:3.1.20'
    compile 'org.rubygems:watchr:0.7'
    compile 'org.rubygems:clamp:0.4.0'

    compile 'org.rubygems:aws-sdk:1.5.7'
    compile 'org.rubygems:nokogiri:1.5.5'
    compile 'org.rubygems:httparty:0.8.3'
    compile 'org.rubygems:json:1.7.3'
}

def filename(file) {
    file.name.substring(0, file.name.lastIndexOf("."))
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/ruby'
        }
    }
}

fileTree(dir: 'src/main/resources', include: '*.haml').each { file ->
    task("haml-${filename(file)}", type: JavaExec) {
        main 'org.jruby.Main'
        classpath runtimeClasspath
        args 'classpath:bin/haml', file.canonicalPath, "$buildDir/static/${filename(file)}.html"
    }

    tasks.build.dependsOn << "haml-${filename(file)}"
}

fileTree(dir: 'src/main/resources', include: '*.sass').each { file ->
    task("sass-${filename(file)}", type: JavaExec) {
        main 'org.jruby.Main'
        classpath runtimeClasspath
        args 'classpath:bin/sass', file.canonicalPath, "$buildDir/static/${filename(file)}.css"
    }

    tasks.build.dependsOn << "sass-${filename(file)}"
}

task("watchr", type: JavaExec) {
    main 'org.jruby.Main'
    classpath runtimeClasspath
    args 'classpath:bin/watchr', "$projectDir/Watchfile"
}

task('deploy', type: JavaExec, dependsOn: ':static:build') {
    main = 'org.jruby.Main'
    classpath = runtimeClasspath
    args = ['classpath:installer.rb', '--bucket', 'www.gemjars.org', '--auth-file', '~/.aws_auth', "$buildDir/static"]
}

processResources << {
    file("$buildDir/static").mkdirs()
}

processResources << {
    copy {
        from 'src/main/resources'
        into "$buildDir/static"
        include '**/*.css'
    }
}
