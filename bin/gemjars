#!/usr/bin/env ruby

$LOAD_PATH << File.expand_path(File.join(File.dirname(__FILE__), "..", "lib"))
$CLASSPATH << Dir[File.join(File.expand_path(File.join(File.dirname(__FILE__), "..", "vendor")), "*")]

require 'thread'
require 'celluloid/autostart'
require 'gemjars/deux/transform'
require 'gemjars/deux/maven_repository'
require 'gemjars/deux/file_store'
require 'gemjars/deux/specifications'
require 'gemjars/deux/http'
require 'gemjars/deux/index'
require 'gemjars/deux/worker'

include Gemjars::Deux

http = Http.default
specs = Specifications.rubygems
store = FileStore.new("./out")
repo = MavenRepository.new(store)
index = Index.spawn(store)

queue = Queue.new

specs.each { |s| queue << s }

pool = Gemjars::Deux::Worker.pool(size: 10, :args => [queue, index, http, repo, specs])

Signal.trap("INT") do
  Timeout::timeout(20) do
    until queue.empty?
      queue.pop
    end
    until pool.busy_size == 0
      sleep 1
    end
  end

  exit
end

pool.run
