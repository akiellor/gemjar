#!/usr/bin/env ruby

$LOAD_PATH << File.expand_path(File.join(File.dirname(__FILE__), "..", "lib"))
$CLASSPATH << Dir[File.join(File.expand_path(File.join(File.dirname(__FILE__), "..", "vendor")), "*")]

require 'thread'
require 'aws-sdk'
require 'gemjars/deux/transform'
require 'gemjars/deux/maven_repository'
require 'gemjars/deux/aws_store'
require 'gemjars/deux/specifications'
require 'gemjars/deux/http'

include Gemjars::Deux

def to_none_compression_stream io
  Java::OrgJrubyUtil::IOInputStream.new(io)
end

def to_gzip_compression_stream io
  Java::JavaUtilZip::GZIPInputStream.new(to_none_compression_stream(io)).to_io
end

http = Http.default
specs = Specifications.new(to_gzip_compression_stream(http.get("http://rubygems.org/specs.4.8.gz")))
keys = YAML.load(File.open(File.expand_path("~/.gemjars")))
s3 = AWS::S3.new(:access_key_id => keys['access_key_id'], :secret_access_key => keys['secret_access_key'])
bucket = s3.buckets["deux.gemjars.org"]
store = AWSStore.new(bucket)
repo = MavenRepository.new(store)

queue = Queue.new

specs.each { |s| queue << s }

3.times {
  Thread.new {
    until queue.empty?
      spec = queue.pop
      p spec
      begin
        spec_name, spec_version = *spec
        out_jar, out_pom = repo.pipe_to(spec_name, spec_version)

        gem_io = http.get("http://rubygems.org/gems/#{spec_name}-#{spec_version}.gem")
        
        transform = Transform.new(spec_name, spec_version, gem_io)
        
        transform.to_mvn(specs) do |h|
          h.success do |jar, pom|
            while jar_chunk = jar.read(1024) || pom_chunk = pom.read(1024)
              out_jar << jar_chunk if jar_chunk
              out_pom << pom_chunk if pom_chunk
            end
          end

          h.native do |exts|
            $stderr.puts "Native Extensions -> #{{:spec => spec, :exts => exts}.inspect}"
          end
        end
      
      rescue => e
        puts e
        puts e.backtrace
      ensure
        out_jar.close
        out_pom.close
      end
    end
  }
}

